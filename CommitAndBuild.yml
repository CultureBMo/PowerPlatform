# Commit and CI pipeline
# ######################
# Make sure you:
#   1) Update the YAML variables below
#   2) In Variables create one for Client.Secret and check "keep it secret"

trigger:
- none

name: $(Date:yyyy).$(Date:MM).$(Date:dd)$(Rev:.r)

parameters:
- name: workItemId
  type: number
  displayName: 'Work Item ID'
- name: commitMessage
  type: string
  displayName: 'Commit Message'

variables:
  Solution.Name: 'BookSolution'
  Tenant.Id: '1a7372b1-2274-4a47-9348-43d04e2d3be4'
  Client.Id: 'af1d092b-d37e-4534-b948-09798da38ad4'
  Connection.String: 'AuthType=ClientSecret;ClientId=$(Client.Id);ClientSecret=$(Client.Secret);url=https://org57a5db54.crm11.dynamics.com'
  Git.Email: 'culturebmo@outlook.com'
  Git.Name: 'Ben Morris'
  Git.Message: '#${{ parameters.workItemId }} ${{ parameters.commitMessage }}'

pool:
  vmImage: windows-latest

jobs:
- job: CommitAndCI
  displayName: 'Commit and CI'
  steps:
  - checkout: self
    persistCredentials: True

  - task: MSCRMToolInstaller@12
    displayName: Power DevOps Tool Installer

  - task: MSCRMPublishCustomizations@12
    displayName: Publish Customizations
    inputs:
      crmConnectionString: $(Connection.String)

  - task: MSCRMSetVersion@12
    displayName: Set Version
    inputs:
      crmConnectionString: $(Connection.String)
      solutionName: $(Solution.Name)
      unpackedFilesFolder: $(Build.SourcesDirectory)\$(Solution.Name)
      versionNumber: $(Build.BuildNumber)

  - task: MSCRMExportSolution@12
    displayName: 'Export Solution: $(Solution.Name)'
    inputs:
      crmConnectionString: $(Connection.String)
      solutionName: $(Solution.Name)
      exportManaged: true
      outputPath: $(Build.ArtifactStagingDirectory)

  - task: MSCRMCheckSolution@12
    displayName: Check Solution
    inputs:
      solutionFile: $(Build.ArtifactStagingDirectory)\$(Solution.Name)_managed.zip
      tenantId: $(Tenant.Id)
      applicationId: $(Client.Id)
      applicationSecret: $(Client.Secret)

  - task: PublishPipelineArtifact@1
    displayName: Publish Pipeline Artifact
    inputs:
      path: $(Build.ArtifactStagingDirectory)\$(Solution.Name)_managed.zip
      artifactName: $(Solution.Name)

  - task: MSCRMExtractSolution@12
    displayName: Extract Solution
    inputs:
      unpackedFilesFolder: $(Build.SourcesDirectory)\$(Solution.Name)
      solutionFile: $(Build.ArtifactStagingDirectory)\$(Solution.Name).zip
      localize: false

  - task: CmdLine@2
    displayName: Commit Files to Source
    inputs:
      script: |
        echo commit all files except zip
        git config user.email "$(Git.Email)"
        git config user.name "$(Git.Name)"
        git checkout main
        git add --all -- :!*.zip
        git commit -m "$(Git.Message)"
        echo push changes
        git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin main
        echo git status
        git status
