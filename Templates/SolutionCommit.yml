# Solution Commit and CI Template
#################################

parameters:
- name: workItemId
  type: number
- name: commitMessage
  type: string
- name: solutionName
  type: string

variables:
- group: common-variable-group
- group: dev-variable-group
- name: Git.Message
  value: '#${{ parameters.workItemId }} ${{ parameters.commitMessage }}'
- name: Connection.String
  value: 'AuthType=ClientSecret;ClientId=$(Client.Id);ClientSecret=$(Client.Secret);url=$(Url)'

jobs:
- job: CommitAndCI
  displayName: Commit and CI
  steps:
  - checkout: self
    fetchDepth: 0
    persistCredentials: true

  - task: MSCRMToolInstaller@12
    displayName: Power DevOps Tool Installer

  - task: MSCRMPublishCustomizations@12
    displayName: Publish Customizations
    inputs:
      crmConnectionString: $(Connection.String)

  - task: MSCRMSetVersion@12
    displayName: Set Version
    inputs:
      crmConnectionString: $(Connection.String)
      solutionName: ${{ parameters.solutionName }}
      unpackedFilesFolder: $(Build.SourcesDirectory)\${{ parameters.solutionName }}
      versionNumber: $(Build.BuildNumber)

  - task: MSCRMExportSolution@12
    displayName: Export Managed and Unmanaged Solution
    inputs:
      crmConnectionString: $(Connection.String)
      solutionName: ${{ parameters.solutionName }}
      exportManaged: true
      outputPath: $(Build.ArtifactStagingDirectory)

  - task: MSCRMExtractSolution@12
    displayName: Extract Solution
    inputs:
      unpackedFilesFolder: $(Build.SourcesDirectory)\${{ parameters.solutionName }}
      solutionFile: $(Build.ArtifactStagingDirectory)\${{ parameters.solutionName }}.zip
      localize: false

  - task: CmdLine@2
    displayName: Commit Files to Source
    inputs:
      script: |
        echo commit all files except zip
        git config user.email "$(Git.Email)"
        git config user.name "$(Git.Name)"
        git checkout main
        git add --all -- :!*.zip
        git commit -m "$(Git.Message)"
        echo push changes
        git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" push origin main
        echo git status
        git status

  - task: MSCRMCheckSolution@12
    displayName: Check Solution
    inputs:
      solutionFile: $(Build.ArtifactStagingDirectory)\${{ parameters.solutionName }}_managed.zip
      tenantId: $(Tenant.Id)
      applicationId: $(Client.Id)
      applicationSecret: $(Client.Secret)

  - task: PublishPipelineArtifact@1
    displayName: Publish Pipeline Artifact
    inputs:
      path: $(Build.ArtifactStagingDirectory)\${{ parameters.solutionName }}_managed.zip
      artifactName: ${{ parameters.solutionName }}